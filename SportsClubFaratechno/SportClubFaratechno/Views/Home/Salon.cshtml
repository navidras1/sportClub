
@{
    ViewData["Title"] = "Salon";
    //Layout = "~/Views/Shared/_VueLoginLayout.cshtml";
}

<h2>سالن</h2>

<template>

    <v-btn @@click="GetClubList()">سالن جدید</v-btn>
    <template>
        <v-data-table :headers="headers"
                      :expanded="sportTblSource"
                      :items="tblSource"
                      :items-per-page="5"
                      class="elevation-1"
                      @*item-key="id"*@
                      item-key="table_header_index"
                      @*@@click:row="clicked"*@>
            <template v-slot:body="{ items }">
                <tbody>
                    <tr v-for="item in items" :key="item.id" :active="selectedItem == item.id" @@click="clicked(item)" style="text-align:right" onclick="highliteTR(this)">
                        <td>{{ item.detailName }}</td>

                        <td>{{ item.description }}</td>
                        <td>{{ item.submissionDateShamsi }}</td>
                        <td>
                            <v-btn class="mx-2" fab dark small color="pink" @@click="onButtonClick(item.id)">
                                <v-icon dark>mdi-heart</v-icon>
                            </v-btn>
                        </td>
                    </tr>
                </tbody>
            </template>

        </v-data-table>

    </template>

    <template>
        <h2> رشته ورزشی</h2>
        <v-btn @@click="assignSportToSalonClicked()">انتساب رشته ورزشی {{assignSportBtnLabel}}</v-btn>
        <v-data-table :headers="sportHeaders"
                      :items="sportTblSource"
                      :items-per-page="5"
                      class="elevation-1"
                      v-show="showSports">

            <template v-slot:body="{items}">
                <tbody>
                    <tr v-for="item in items" :key="item.id" @@click="sportClicked(item)" style="text-align:right" onclick="highliteTR(this)">
                        <td>{{ item.sportName }}</td>


                        @*<td>
                                <v-btn class="mx-2" fab dark small color="pink" @@click="onButtonClick(item.id)">
                                    <v-icon dark>mdi-heart</v-icon>
                                </v-btn>
                            </td>*@
                    </tr>
                </tbody>
            </template>

        </v-data-table>
    </template>



    <!-- ثبت دوره -->
    <template>
        <h2>دوره</h2>
        <v-btn @@click="dialogSession=true;GetListOfSessionTypes();">انتساب دوره به {{assignSportBtnLabel}} {{selectedSportName}}</v-btn>


        <template>
            <v-row justify="center">
                <v-dialog v-model="dialogSession"
                          @@keydown.esc="dialogSession = false"
                          max-width="600px">

                    <v-card>
                        <v-card-title>
                            <span class="text-h5">ثبت دوره</span>
                        </v-card-title>
                        <v-card-text>
                            <v-container>
                                <v-row>
                                    <v-col cols="1"
                                           sm="6"
                                           md="4">
                                        <v-select v-model="registerSessionModel.sessionTypeId"
                                                  :items="sessionTypeSource"
                                                  item-text="detailName"
                                                  item-value="id"
                                                  label="نوع جلسه"
                                                  required
                                                  v-on:input="SessionTypeDDListChanged()"></v-select>


                                    </v-col>
                                </v-row>
                                <v-row>
                                    <v-col cols="12"
                                           sm="6"
                                           md="4">
                                        <v-text-field v-model="registerSessionModel.numberOfSessions"
                                                      v-show="registerSessionModelShow.numberOfSessions"
                                                      label="تعداد جلسات*"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12"
                                           sm="6"
                                           md="4">
                                        <v-text-field v-model="registerSessionModel.startDateShamsi" label="تاریخ شروع*"
                                                      hint="1400/03/01"
                                                      persistent-hint
                                                      v-show="registerSessionModelShow.startDateShamsi"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12"
                                           sm="6"
                                           md="4">
                                        <v-text-field v-model="registerSessionModel.endDateShamsi" label="تاریخ پایان*"
                                                      hint="1400/03/01"
                                                      persistent-hint
                                                      v-show="registerSessionModelShow.endDateShamsi"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12">
                                        <v-text-field v-model="registerSessionModel.startTime" label="ساعت شروع*"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12">
                                        <v-text-field v-model="registerSessionModel.endTime" label="ساعت پایان*"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12">
                                        <v-text-field v-model="registerSessionModel.totalPrice" label="قیمت*"
                                                      v-show="registerSessionModelShow.totalPrice"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12">
                                        <v-text-field v-model="registerSessionModel.atAprice" label="قیمت هر جلسه*"
                                                      required></v-text-field>
                                    </v-col>
                                    <v-col cols="12"
                                           sm="6">
                                        <v-select v-model="registerSessionModel.sex"
                                                  :items="sexTypeSource"
                                                  item-text="detailName"
                                                  item-value="id"
                                                  label="جنسیت*"
                                                  required></v-select>
                                    </v-col>
                                    <v-col cols="12">
                                        <v-text-field v-model="registerSessionModel.numberOfPeople" label="تعداد نفرات*"
                                                      required></v-text-field>
                                    </v-col>
                                </v-row>
                            </v-container>
                            <small>*indicates required field</small>
                        </v-card-text>
                        <v-card-actions>
                            <v-spacer></v-spacer>
                            <v-btn color="blue darken-1"
                                   text
                                   @@click="dialogSession = false">
                                انصراف
                            </v-btn>
                            <v-btn color="blue darken-1"
                                   text
                                   @@click="RegisterSession()">
                                ثبت
                            </v-btn>
                        </v-card-actions>
                    </v-card>
                </v-dialog>
            </v-row>
        </template>

        <v-data-table :headers="sessionTblHeader"
                      :items="sessionTblSource"
                      :items-per-page="5"
                      item-key="table_header_index"
                      class="elevation-1">

            <template v-slot:body="{items}">
                <tbody>
                    <tr v-for="item in items" :key="item.id" style="text-align:right" onclick="highliteTR(this)" @@click="selectedSessionId=item.id;SessionSelected() ">
                        <td>{{ item.numberOfSessions }}</td>
                        <td>{{ item.startDateShamsi }}</td>
                        <td>{{ item.startDateShamsi }}</td>
                        <td>{{ item.endDateShamsi }}</td>
                        <td>{{ item.numberOfPeople }}</td>
                        <td>{{ item.sex }}</td>
                        <td>{{ item.startTime }}</td>
                        <td>{{ item.endTime }}</td>
                        <td>{{ item.totalPrice }}</td>
                        <td>{{ item.numberOfPeople }}</td>



                        @*{ text: "تعداد جلسات", value: "numberOfSessions" },
                            { text: "تاریخ شروع", value: "startDateShamsi" },
                            { text: "تاریخ پایان", value: "ndDateShamsi" },
                            { text: "تعداد نفرات", value: "numberOfPeople" },
                            { text: "جنسیت", value: "sex" },
                            { text: "ساعت شروع", value: "startTime" },
                            { text: "ساعت پایان", value: "endTime" },
                            { text: "هزینه دوره", value: "totalPrice" },
                            { text: "تعداد نفرات", value: "numberOfPeople" },*@



                    </tr>
                </tbody>
            </template>

        </v-data-table>

    </template>

    <v-dialog v-model="dialogSalon"
              max-width="600px" content-class="my-custom-dialog"
              @@keydown.esc="dialogSalon = false;resetForm();">
        <v-form ref="form"
                @*v-model="valid"*@
                lazy-validation>
            <v-card>
                <v-card-title>
                    <span class="text-h5">ثبت سالن</span>
                </v-card-title>
                <v-card-text>
                    <v-container>
                        <v-row>

                            <v-col cols="12">
                                <v-select v-model="clubSelect"
                                          :items="clubNames"
                                          item-text="detailName"
                                          item-value="id"
                                          label="باشگاه"
                                          autofocus
                                          :rules="nameRules">

                                </v-select>
                            </v-col>

                            <v-col cols="12">
                                <v-text-field label="نام سالن*"
                                              required
                                              hint="نام سالن را وارد کنید"
                                              v-model="salonName"
                                              @@keydown.enter="focusNext"
                                              :rules="nameRules"></v-text-field>
                            </v-col>

                            <v-col cols="12">
                                <v-text-field label="توضیحات"
                                              @@keydown.enter="createSalon(clubSelect ,salonName)"
                                              v-model="salonDescription"></v-text-field>
                            </v-col>

                </v-card-text>
                <v-card-actions>
                    <v-spacer></v-spacer>
                    <v-btn color="red darken-1"
                           text
                           @@click="dialogSalon = false;resetForm();">
                        انصراف
                    </v-btn>
                    <v-btn color="green darken-1"
                           text
                           @@click="createSalon(clubSelect ,salonName)">
                        ثبت
                    </v-btn>
                </v-card-actions>
            </v-card>
        </v-form>
    </v-dialog>


    <!--ثبت نام کاربر-->

    <template>
        <v-btn @@click="GetUsers();">ثبت نام کاربر</v-btn>
        <v-dialog v-model="dialogUserRegister"
                  max-width="600px" content-class="my-custom-dialog"
                  @@keydown.esc="dialogUserRegister = false">

            <template>

                <v-data-table :headers="userTblHeader"
                              :items="userTblSource"
                              :items-per-page="5"
                              item-key="table_header_index"
                              class="elevation-1">
                    <template v-slot:body="{items}">
                        <tbody>
                            <tr v-for="item in items" :key="item.id" style="text-align:right" onclick="highliteTR(this)" @@click="selectedUserId=item.id; ">
                                <td>{{ item.userName }}</td>
                                <td>{{ item.role }}</td>
                                <td>{{ item.email }}</td>
                                <td>{{ item.phone }}</td>
                                <td><v-btn @@click="RegisterUserForSession(item.id)">ثبت نام</v-btn> </td>




                                @*{ text: "تعداد جلسات", value: "numberOfSessions" },
                                    { text: "تاریخ شروع", value: "startDateShamsi" },
                                    { text: "تاریخ پایان", value: "ndDateShamsi" },
                                    { text: "تعداد نفرات", value: "numberOfPeople" },
                                    { text: "جنسیت", value: "sex" },
                                    { text: "ساعت شروع", value: "startTime" },
                                    { text: "ساعت پایان", value: "endTime" },
                                    { text: "هزینه دوره", value: "totalPrice" },
                                    { text: "تعداد نفرات", value: "numberOfPeople" },*@



                            </tr>
                        </tbody>
                    </template>

                </v-data-table>

            </template>

        </v-dialog>
    </template>

    <v-data-table :headers="userSessionTblHeader"
                  :items="userSessionTblSource"
                  :items-per-page="5"
                  item-key="table_header_index"
                  class="elevation-1">

        <template v-slot:body="{items}">
            <tbody>
                <tr v-for="item in items" :key="item.sessionUserId" style="text-align:right" onclick="highliteTR(this)">
                    <td>{{ item.userName }}</td>
                    <td>{{ item.email }}</td>
                    <td>{{ item.phoneNumber }}</td>

                </tr>
            </tbody>
        </template>

    </v-data-table>



    <v-dialog v-model="dialogSports"
              max-width="600px" content-class="my-custom-dialog"
              @@keydown.esc="dialogSports = false">

        <v-card>
            <v-card-title>
                <span class="text-h5"> انتساب رشته ورزشی به {{assignSportBtnLabel}}</span>
            </v-card-title>
            <v-card-text>
                <v-container>
                    <v-row>

                        <v-col cols="12">
                            <v-select v-model="sportSelect"
                                      :items="availSports"
                                      item-text="detailName"
                                      item-value="id"
                                      label="رشته ورزشی">

                            </v-select>
                        </v-col>

                        @*<v-col cols="12">
                                <v-text-field label="نام سالن*"
                                              required
                                              hint="نام سالن را وارد کنید"
                                              v-model="salonName"></v-text-field>
                            </v-col>*@

            </v-card-text>
            <v-card-actions>
                <v-spacer></v-spacer>
                <v-btn color="red darken-1"
                       text
                       @@click="dialogSports=false">
                    انصراف
                </v-btn>
                <v-btn color="green darken-1"
                       text
                       @@click="assignSportToSalon(sportSelect, selectedSalonId)">
                    ثبت
                </v-btn>
            </v-card-actions>
        </v-card>
    </v-dialog>







    <v-snackbar v-model="snackbar"
                :timeout="snackBarTimeout"
                color="blue-grey">
        {{ snackbarMessage }}

        @*<template v-slot:action="{ attrs }">
                <v-btn color="red"
                       text
                       v-bind="attrs"
                       @@click="snackbar = false">
                    Close
                </v-btn>
            </template>*@
    </v-snackbar>





</template>

@section VueComponents{
    <script>
        //var myMixin = {
        //    data: {
        //        dialog: false
        //    }
        //};
    </script>




    <script>

        var myMixin = {
            data: {
                menu: false,
                activePicker: null,
                date: '2018-03-02',
                salonName: "",
                picker: null,//(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),
                showSports: false,

                dialogSession: false,


                snackbar: false,
                snackbarMessage: "",

                snackbarColor: "",
                snackBarTimeout: 3000,




                headers: [


                    { text: 'نام سالن', value: 'detailName' },

                    { text: 'توضیحات', value: 'description' },

                    { text: 'تاریخ ثبت', value: 'submissionDateShamsi' },

                    { text: 'عملیات', value: "operation" }

                ],



                sportHeaders: [
                    { text: 'نام رشته', value: 'sportName' }
                ],

                salonDescription: "",
                assignSportBtnLabel: "",
                sportTblSource: [],
                tblSource: [],
                dialogSalon: false,
                clubNames: [],
                clubSelect: {},

                selectedSalonId: 0,

                availSports: [],
                dialogSports: false,
                sportSelect: {},
                selectedItem: 1,
                selectedSportName: "",

                sessionTblHeader: [
                    { text: "تعداد جلسات", value: "numberOfSessions" },
                    { text: "تاریخ شروع", value: "startDateShamsi" },
                    { text: "تاریخ پایان", value: "ndDateShamsi" },
                    { text: "تعداد نفرات", value: "numberOfPeople" },
                    { text: "جنسیت", value: "sex" },
                    { text: "ساعت شروع", value: "startTime" },
                    { text: "ساعت پایان", value: "endTime" },
                    { text: "هزینه دوره", value: "totalPrice" },
                    { text: "تعداد نفرات", value: "numberOfPeople" },

                ],
                sessionTblSource: [],
                selectedSalonSportId: 0,

                registerSessionModel: {

                    salonSportId: null,
                    numberOfSessions: null,
                    startDateShamsi: null,
                    endDateShamsi: null,
                    startTime: null,
                    endTime: null,
                    description: null,
                    totalPrice: null,
                    atAprice: null,
                    submissionDate: null,
                    submissionDateShamsi: null,
                    sex: null,
                    numberOfPeople: null,
                    sessionTypeId: null,


                },
                registerSessionModelShow: {

                    startDateShamsi: true,
                    endDateShamsi: true,
                    numberOfSessions: true,
                    totalPrice: true,
                },


                showRegisterUserForSessionDialog: false,


                dialogUserRegister: false,

                userTblHeader: [
                    { text: 'نام کاربری', value: 'userName' },

                    { text: 'نقش', value: 'role' },

                    { text: 'ایمیل', value: 'email' },
                    { text: 'تلفن', value: 'phone' },

                ],
                userTblSource: [],
                selectedSessionId: 0,
                selectedUserId: 0,
                userSessionTblHeader: [
                    { text: 'نام کاربری', value: 'userName' },

                    { text: 'ایمیل', value: 'email' },

                    { text: 'شماره تلفن', value: 'phoneNumber' },

                ],
                userSessionTblSource: [],
                sexTypeSource: [],

                sessionTypeSource: [],

            },
            created: async function () {
                await this.GetsSexTypes();
                await this.GetListOfSessionTypes();
            },
            methods: {


                SessionTypeDDListChanged: function () {

                    var e = this.registerSessionModel.sessionTypeId;
                    //alert(e);

                    if (e == 1) {
                        this.registerSessionModelShow.startDateShamsi = true;
                        this.registerSessionModelShow.endDateShamsi = true;
                        this.registerSessionModelShow.numberOfSessions = true;
                        this.registerSessionModelShow.totalPrice = true;
                    }
                    else if (e == 2) {
                        this.registerSessionModelShow.startDateShamsi = false;
                        this.registerSessionModelShow.endDateShamsi = false;
                        this.registerSessionModelShow.numberOfSessions = true;
                        this.registerSessionModelShow.totalPrice = true;

                    }
                    else if (e == 3) {
                        this.registerSessionModelShow.startDateShamsi = false;
                        this.registerSessionModelShow.endDateShamsi = false;
                        this.registerSessionModelShow.numberOfSessions = false;
                        this.registerSessionModelShow.totalPrice = false;
                    }
                },
                GetsSexTypes: async function () {
                    let model = {
                        Model: null,
                        Address: "/api/Definitions/ListOfSessionSex"
                    };
                    let vv = await CallApi(model);
                    this.sexTypeSource = vv.data;//= this.sexTypeSource;
                },
                clubDDListChanged: function () {
                    this.focusNext();
                },
                showSnack: function (snackbarMessage) {
                    this.snackbar = true;
                    this.snackbarMessage = snackbarMessage;
                },
                GetClubList: async function () {


                    let model = { Model: null, Address: "/api/Definitions/GetClubList" };


                    let vv = await CallApi(model);
                    this.clubNames = vv.data;
                    this.clubSelect = vv.data[1];
                    this.dialogSalon = true;

                },
                createSalon: async function (club, salon) {

                    if (salon == undefined || salon.trim() == "") {
                        this.showSnack("نام باشگاه الزامی است");
                        return;
                    }
                    let theClubId = 0;
                    if (club.id) {
                        theClubId = club.id;
                    }
                    else {
                        theClubId = club;
                    }


                    let model = {
                        Model: {
                            detailName: salon,
                            description: this.salonDescription
                        },
                        Address: "/api/Definitions/CreateDetailSalon"

                    };
                    let vv = {};
                    vv = await CallApi(model);
                    if (vv.hasError) {

                        if (vv.message.includes("نوع مورد نظر از قبل موجود است")) {
                            this.showSnack(vv.message.replace("نوع", "سالن"));
                        }
                        else {
                            this.showSnack(vv.message);

                        }
                        return;
                    }

                    let salonId = vv.data.id;



                    model = {
                        Model: {
                            ClubId: theClubId,
                            SalonId: salonId
                        },
                        Address: "/api/Club/AssignClubToSalon"

                    };
                    vv = await CallApi(model);



                    model = { Model: null, Address: "/api/Definitions/GetSalonList" };


                    vv = await CallApi(model);
                    this.tblSource = vv.data;
                    this.dialogSalon = false;
                    this.resetForm();

                }
                ,
                clicked: async function (item) {
                    //row.select(true);
                    //item.name - selected id
                    //alert(JSON.stringify(item));
                    let SalonIdd = item.id
                    //row.select(true);
                    let model = {
                        Model: {
                            salonId: SalonIdd
                        }, Address: "/api/SalonSport/GetListofSporsBySalonId"
                    };

                    this.assignSportBtnLabel = item.detailName;

                    let ress = await CallApi(model);

                    this.sportTblSource = ress.data;

                    this.selectedSalonId = item.id;

                    this.selectedSportName = "";

                    if (this.sportTblSource.length > 0) {

                        this.showSports = true;
                    }
                    else {
                        this.showSports = false;
                    }

                    //alert( JSON.stringify(this.sportTblSource));
                },
                assignSportToSalonClicked: async function () {

                    //alert(this.selectedSalonId);

                    let model = {
                        Model: {
                            salonId: this.selectedSalonId
                        }
                        , Address: "/api/SalonSport/GetListofSporsByNotInSalonId"
                    };
                    let vv = await CallApi(model);

                    this.availSports = vv.data;

                    this.sportSelect = vv.data[0];

                    this.dialogSports = true;

                },

                assignSportToSalon: async function (sportId, salonId) {

                    let theSportId = 0;
                    if (sportId.id) {
                        theSportId = sportId.id;
                    }
                    else {
                        theSportId = sportId;
                    }

                    let model = {
                        Model: {
                            salonTypeId: salonId,
                            sportTypeId: theSportId,
                            desctiption: ""
                        }
                        , Address: "/api/SalonSport/AssignSportToSalon"
                    };
                    let vv = await CallApi(model);
                    if (vv.hasError) {
                        this.showSnack(vv.message);
                    } else {
                        model = {
                            Model: {
                                salonId: this.selectedSalonId
                            }, Address: "/api/SalonSport/GetListofSporsBySalonId"
                        };
                        let ress = await CallApi(model);

                        this.sportTblSource = ress.data;
                        this.dialogSports = false;
                        this.showSports = true;
                    }

                },
                onButtonClick: function (item) {
                    let theItem = item;
                },

                sportClicked: async function (sportItem) {

                    let theSportItem = sportItem;
                    this.selectedSalonSportId = theSportItem.id;
                    this.selectedSportName = sportItem.sportName;
                    //alert(theSportItem.id);

                    let model = {
                        Model: {
                            salonSportId: sportItem.id
                        }
                        , Address: "/api/Session/ListOfSessionsBySalonSportId"
                    };

                    let vv = await CallApi(model);
                    this.sessionTblSource = vv.data;

                },
                RegisterSession: async function () {

                    this.registerSessionModel.salonSportId = this.selectedSalonSportId;

                    let model = {
                        Model: this.registerSessionModel
                        , Address: "/api/Session/CreateSession"
                    };
                    let vv = await CallApi(model);
                    if (vv.hasError) {
                        this.showSnack(vv.message);
                    }
                    else {
                        this.showSnack("ثبت دوره با موفقیت انجام شد.");
                        this.dialogSession = false;

                        model = {
                            Model: {
                                salonSportId: this.selectedSalonSportId
                            },
                            Address: "/api/Session/ListOfSessionsBySalonSportId"
                        }
                        vv = await CallApi(model);
                        this.sessionTblSource = vv.data;
                    }
                },

                GetUsers: async function () {

                    // //alert(this.selectedSessionId);

                    this.dialogUserRegister = true;
                    var model = {
                        Model: null,
                        Address: "/api/Authenticate/listOfUsers"

                    };

                    let vv = await CallApi(model);

                    this.userTblSource = vv.data;
                },

                RegisterUserForSession: async function (userId) {
                    //alert(`${userId} ${this.selectedSessionId}`);
                    let model = {
                        Model: {

                            sessionId: this.selectedSessionId,
                            userInfoLst: [
                                {
                                    userId: userId
                                }
                            ]
                        },
                        Address: "/api/Session/RegisterUserSession"

                    };
                    let vv = await CallApi(model);
                    this.showSnack(vv.message);
                    if (!vv.hasError) {
                        await this.SessionSelected();
                    }

                },

                SessionSelected: async function () {
                    //this.selectedSessionId;

                    let model = {
                        Model: {
                            sessionId: this.selectedSessionId
                        },
                        Address: "/api/Session/GetListOfSessionUsersBySessionId"

                    };

                    let vv = await CallApi(model);
                    this.userSessionTblSource = vv.data;


                },
                test: function () {
                    alert(window.location.href);
                },
                GetListOfSessionTypes: async function () {

                    let model = {
                        Model: null,
                        Address: "/api/Definitions/ListOfSessionTypes"

                    };
                    let vv = await CallApi(model);
                    this.sessionTypeSource = vv.data;
                }


            }



        };

        async function GetSalonList() {



            let model = { Model: null, Address: "/api/Definitions/GetSalonList" };


            let vv = await CallApi(model);
            mainVueApp.$data.tblSource = vv.data;
        }

        GetSalonList();


        function highliteTR(tr) {

            let theRows = tr.parentNode.rows;
            //alert(theRows.length);

            for (let i = 0; i < theRows.length; i++) {
                let ss = theRows[i];
                ss.classList.remove("bg-info");

            }
            tr.classList.add("bg-info");

            //theRows.forEach(function (item, index) {

            //    alert(index);
            //});


        }
    </script>

}
