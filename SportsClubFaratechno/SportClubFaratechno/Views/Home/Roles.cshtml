
@{
    ViewData["Title"] = "Roles";
    Layout = "~/Views/Shared/_VueLayout.cshtml";
}

<h1>نقوش</h1>
<v-btn @@click="showNewRoleDialog=true">نقش جدید</v-btn>
<v-data-table :headers="roleTblHeaders"
              :items="roleTblSource"
              :items-per-page="5"
              class="elevation-1">
    <template v-slot:body="{items}">
        <tbody>
            <tr v-for="item in items" :key="item.id"  style="text-align:right" onclick="highliteTR(this)">
                <td>{{ item.roleName }}</td>
                




                @*<td>
                        <v-btn class="mx-2" fab dark small color="pink" @@click="onButtonClick(item.id)">
                            <v-icon dark>mdi-heart</v-icon>
                        </v-btn>
                    </td>*@
            </tr>
        </tbody>
    </template>

</v-data-table>

<v-dialog v-model="showNewRoleDialog"
          persistent
          max-width="600px" content-class="my-custom-dialog">

    <v-card>
        <v-card-title>
            <span class="text-h5">ثبت نقش</span>
        </v-card-title>
        <v-card-text>
            <v-container>
                <v-row>

                    <v-col cols="12">
                        <v-text-field label="نام نقش*"
                                      required
                                      hint="نام سالن را وارد کنید"
                                      v-model="roleName"></v-text-field>
                    </v-col>

        </v-card-text>
        <v-card-actions>
            <v-spacer></v-spacer>
            <v-btn color="red darken-1"
                   text
                   @@click="showNewRoleDialog = false;roleName=''">
                انصراف
            </v-btn>
            <v-btn color="green darken-1"
                   text
                   @@click="CreateNewRole()">
                ثبت
            </v-btn>
        </v-card-actions>
    </v-card>
</v-dialog>



<v-snackbar v-model="snackbar"
            :timeout="snackBarTimeout"
            color="blue-grey">
    {{ snackbarMessage }}

    @*<template v-slot:action="{ attrs }">
            <v-btn color="red"
                   text
                   v-bind="attrs"
                   @@click="snackbar = false">
                Close
            </v-btn>
        </template>*@
</v-snackbar>

@section VueComponents{ 

    <script>
        myMixin = {

            data: {
                snackbar: false,
                snackbarMessage: "",

                snackbarColor: "",
                snackBarTimeout: 3000,
                roleTblSource: [],
                roleTblHeaders: [
                    { text: 'نقش', value: 'roleName' }

                ],
                showNewRoleDialog: false,
                roleName: "",
            },
            methods: {

                showSnack: function (snackbarMessage) {
                    this.snackbar = true;
                    this.snackbarMessage = snackbarMessage;
                },




                CreateNewRole: async function () {
                    let model = {
                        Model: {
                            roleName: this.roleName
                        },
                        Address: "/api/Authenticate/createRole"
                    };
                    let vv = await CallApi(model);
                    await this.GetRoles();


                },
                GetRoles: async function () {
                    var model = {
                        Model: null,
                        Address: "/api/Authenticate/listOfRoles"

                    };

                    let vv = await CallApi(model);

                    this.roleTblSource = vv.data;
                }
            },
            created:function() {
                this.GetRoles();
            }

        }

        function highliteTR(tr) {

            let theRows = tr.parentNode.rows;
            //alert(theRows.length);

            for (let i = 0; i < theRows.length; i++) {
                let ss = theRows[i];
                ss.classList.remove("bg-info");

            }
            tr.classList.add("bg-info");

            //theRows.forEach(function (item, index) {

            //    alert(index);
            //});


        }

        //async function GetRoles() {
        //    var model = {
        //        Model: null,
        //        Address: "/api/Authenticate/listOfRoles"

        //    };

        //    let vv = await CallApi(model);

        //    mainVueApp.$data.roleTblSource = vv.data;
        //}
        //GetRoles();

        //mainVueApp.$data.

    </script>
    


}