#pragma checksum "D:\SportClub\sportclub_rasoli\SportsClubFaratechno\SportClubFaratechno\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "001433a6f692d7240b1d082545f5eab14045a44d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\SportClub\sportclub_rasoli\SportsClubFaratechno\SportClubFaratechno\Views\_ViewImports.cshtml"
using SportClubFaratechno;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SportClub\sportclub_rasoli\SportsClubFaratechno\SportClubFaratechno\Views\_ViewImports.cshtml"
using SportClubFaratechno.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"001433a6f692d7240b1d082545f5eab14045a44d", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a89ab10faf5892a88e09e9beada0dfce1723d9e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Components/snackBar.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\SportClub\sportclub_rasoli\SportsClubFaratechno\SportClubFaratechno\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("\r\n\r\n\r\n\r\n<div style=\"text-align:right; direction:rtl\" id=\"theDialog\">\r\n\r\n\r\n\r\n    <v-btn ");
            WriteLiteral(@"@click=""dialog=true; showSalonDialog=false"">باشگاه جدید</v-btn>
    <template>
        <v-data-table :headers=""headers""
                      :items=""tblSource""
                      :items-per-page=""5""
                      class=""elevation-1"">

        </v-data-table>
    </template>


    <v-row justify=""center"">
        <v-dialog v-model=""dialog""
                  ");
            WriteLiteral("@keydown.esc=\"dialog = false\"\r\n                  max-width=\"600px\" content-class=\"my-custom-dialog\">\r\n            <v-form ref=\"form\"\r\n                    ");
            WriteLiteral(@"                    lazy-validation>
                <v-card>
                    <v-card-title>
                        <span class=""text-h5"">{{dialogCaption}}</span>
                    </v-card-title>
                    <v-card-text>
                        <v-container>
                            <v-row>

                                <v-col cols=""12"">
                                    <v-text-field label=""نام باشگاه*""
                                                  required
                                                  :rules=""nameRules""
                                                  :hint=""dialogHint""
                                                  v-model=""clubName""
                                                  ");
            WriteLiteral(@"@keydown.enter=""focusNext""
                                                  autofocus>
                                    </v-text-field>
                                </v-col>
                                <v-col cols=""12"">
                                    <v-text-field label=""توضیحات""
                                                  v-model=""ClubDescription""
                                                  required
                                                  ");
            WriteLiteral(@"@keydown.enter=""createClub()""
                                                  ></v-text-field>
                                </v-col>


                            </v-row>
                        </v-container>

                    </v-card-text>
                    <v-card-actions>
                        <v-spacer></v-spacer>
                        <v-btn color=""red darken-1""
                               text
                               ");
            WriteLiteral("@click=\"dialog = false;resetForm();\">\r\n                            انصراف\r\n                        </v-btn>\r\n                        <v-btn color=\"green darken-1\"\r\n                               text\r\n                               ");
            WriteLiteral(@"@click=""createClub()"">
                            ثبت
                        </v-btn>
                    </v-card-actions>

                </v-card>
            </v-form>
        </v-dialog>


        <v-dialog v-model=""dialogSalon""
                  persistent
                  max-width=""600px"" 
                  
                  content-class=""my-custom-dialog"">
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "001433a6f692d7240b1d082545f5eab14045a44d7346", async() => {
                WriteLiteral(@"
                <v-card>
                    <v-card-title>
                        <span class=""text-h5"">ثبت سالن</span>
                    </v-card-title>
                    <v-card-text>
                        <v-container>
                            <v-row>

                                <v-col cols=""12"">
                                    <v-text-field label=""نام سالن*""
                                                  required
                                                  hint=""نام سالن را وارد کنید""
                                                  v-model=""salonName""
                                                  ");
                WriteLiteral(@"@keydown.enter=""focusNext""
                                                  :rules=""nameRules""
                                                  autofocus
                                                  ></v-text-field>
                                </v-col>
                                <v-col cols=""12"">
                                    <v-text-field label=""توضیحات""
                                                  requiredhint=""نام سالن را وارد کنید""
                                                  v-model=""salonDescription""
                                                  ");
                WriteLiteral(@"@keydown.enter=""createSalon""
                                                  ></v-text-field>
                                </v-col>


                            </v-row>
                        </v-container>

                    </v-card-text>
                    <v-card-actions>
                        <v-spacer></v-spacer>
                        <v-btn color=""red darken-1""
                               text
                               ");
                WriteLiteral("@click=\"dialog = false\">\r\n                            انصراف\r\n                        </v-btn>\r\n                        <v-btn color=\"green darken-1\"\r\n                               text\r\n                               ");
                WriteLiteral("@click=\"createSalon()\">\r\n                            ثبت\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </v-dialog>\r\n\r\n\r\n\r\n\r\n    </v-row>\r\n    <v-snackbar v-model=\"snackbar\"\r\n                :timeout=\"timeout\"\r\n                color=\"blue-grey\">\r\n        {{ snackbarMessage }}\r\n\r\n");
            WriteLiteral("    </v-snackbar>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n");
            DefineSection("VueComponents", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "001433a6f692d7240b1d082545f5eab14045a44d11282", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <script>\r\n        var myMixin = {\r\n            data: {\r\n                dialog: false\r\n            }\r\n        };\r\n    </script>\r\n");
                WriteLiteral(@"



    <script>





        //axios.post(""/General/Login"", LoginModel).then(response => vv = response).catch(err => console.log(err));

        var clubId = 0;
        var salonId = 0;


        //var myMixin = {
        //    data: {
        //        dialog: false,

        //    },
        //    watch: {
        //        dialog: function (newValue, old) {
        //            if (!newValue) {
        //                alert(""closed"")
        //            }
        //        }
        //    }
        //}


        // mixins: [myMixin],


        var myMixin = {


            watch: {
                dialog: function (newValue, old) {
                    if (!newValue) {
                        this.resetForm();
                    }
                }
            },
            data: {
                headers: [


                    { text: 'نام سالن', value: 'detailName' },

                    { text: 'توضیحات', value: 'description' },

            ");
                WriteLiteral(@"        { text: 'تاریخ ثبت', value: 'submissionDateShamsi' }

                ],

                tblSource: [],
                showSalonDialog: true,


                dialog: false,
                dialogCaption: """",
                dialogHint: """",
                clubName: """",
                snackbar: false,
                snackbarMessage: """",

                snackbarColor: """",
                timeout: 3000,


                dialogSalon: false,
                salonName: """",

                testShow: true,
                ClubDescription: """",
                salonDescription:""""


            },
            methods: {
                createClub: async function () {
                    let model = {
                        Model: {
                            detailName: this.clubName,
                            description: this.ClubDescription
                        },
                        Address: ""/api/Definitions/CreateClub""

                    };

    ");
                WriteLiteral(@"                let vv = {};

                    await axios.post(""/General/CallApi"", model).then(response => vv = response.data).catch(err => console.log(err));

                    if (vv.hasError == true) {



                        this.snackbarMessage = vv.message;
                        this.snackbarColor = ""yellow"";
                        this.snackbar = true;
                    }
                    else {


                        if (this.showSalonDialog == false) {
                            this.dialog = false;
                            this.getClubList();
                            return;
                        }



                        
                        clubId = vv.data.id;
                        
                        let clubModel = {
                            Model: {
                                ClubId: clubId,
                                Address: """",
                                Description: """"
                            },");
                WriteLiteral(@"
                            Address: ""/api/Club/RegisterClub""
                        };
                        await axios.post(""/General/CallApi"", clubModel).then(response => vv = response.data).catch(err => console.log(err));

                        this.dialog = false;
                        this.getClubList();
                        this.dialogSalon = true;
                    }




                },
                createSalon: async function () {
                    let model = {
                        Model: {
                            detailName: this.salonName,
                            description: this.salonDescription
                        },
                        Address: ""/api/Definitions/CreateDetailSalon""

                    };

                    let vv = {};

                    await axios.post(""/General/CallApi"", model).then(response => vv = response.data).catch(err => console.log(err));

                    if (vv.hasError == true) {

      ");
                WriteLiteral(@"                  this.snackbarMessage = vv.message;
                        this.snackbarColor = ""yellow"";
                        this.snackbar = true;
                    }
                    else {

                        salonId = vv.data.id;

                        model = {
                            Model: {
                                ClubId: clubId,
                                SalonId: salonId
                            },
                            Address: ""/api/Club/AssignClubToSalon""

                        };


                        await axios.post(""/General/CallApi"", model).then(response => vv = response.data).catch(err => console.log(err));
                        this.dialogSalon = false;


                    }

                },

                getClubList: async function () {
                    let vv;

                    let model = { Model: null, Address: ""/api/Definitions/GetClubList"" };

                    vv = await CallApi(model)");
                WriteLiteral(@";
                    this.tblSource = vv.data;

                },
                test: function () {
                    alert(window.location.href);
                }
            }

            ,
            created: function () {
               this. getClubList();
            }

        };

        async function RegisterClub() {
            let vv;

            let model = { Model: null, Address: ""/api/Definitions/GetClubList"" }

            await axios.post(""/General/CallApi"", model).then(response => vv = response.data).catch(err => console.log(err));
            //alert(JSON.stringify(vv.data));
            if (vv.data.length == 0) {
                mainVueApp.$data.dialogCaption = ""ثبت باشگاه"";
                mainVueApp.$data.dialogHint = ""لطفا نام باشگاه را وارد کنید"";
                mainVueApp.$data.dialog = true;
            }
        }
        RegisterClub();

        


    </script>

");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
